import React from 'react';
import { Text, View } from 'react-native';
import FilterLink from './FilterLink';
import CategoryMenu from './CategoryMenu';
import SpaceMenu from './SpaceMenu';
import Accordion from 'react-native-collapsible/Accordion';
import Constants from "../config/constants";

const CATEGORIES = [
  {
    title: 'By category',
  }
];

const SPACES = [
  {
    title: 'By Venue',
  }
];

class Header extends React.Component {

  state = {
    activeSectionsCat: [],
    activeSectionsSpace: []
  };

  _renderHeader = section => {
    return (
      <View>
        <Text>{section.title}</Text>
      </View>
    );
  };

  _renderContentCat = section => {
    return (
      <View>
        <CategoryMenu />
      </View>
    );
  };

  _renderContentSpace = section => {
    return (
      <View>
        <SpaceMenu />
      </View>
    );
  };

  _updateSectionsCat = activeSectionsCat => {
    this.setState({ activeSectionsCat });
    this.setState({ activeSectionsSpace: []});
  };
  _updateSectionsSpace = activeSectionsSpace => {
    this.setState({ activeSectionsSpace });
    this.setState({ activeSectionsCat: []});
  };

  render() {
    return (
      <View>       
        <FilterLink text={Constants.CATS['home'].text} navroute='Home' />
        <FilterLink text={Constants.CATS['openings'].text} filter='openings' navroute='Category' />
        <FilterLink text={Constants.CATS['unmissables'].text} filter='unmissables' navroute='Category' />
        <FilterLink text={Constants.CATS['recommended'].text} filter='recommended' navroute='Category' />
        <FilterLink text={Constants.CATS['activities'].text} filter='activities' navroute='Category' />
        <Accordion
          sections={CATEGORIES}
          activeSections={this.state.activeSectionsCat}
          renderHeader={this._renderHeader}
          renderContent={this._renderContentCat}
          onChange={this._updateSectionsCat}
        />
        <Accordion
          sections={SPACES}
          activeSections={this.state.activeSectionsSpace}
          renderHeader={this._renderHeader}
          renderContent={this._renderContentSpace}
          onChange={this._updateSectionsSpace}
        />
      </View>
    );
  }
}

export default Header;